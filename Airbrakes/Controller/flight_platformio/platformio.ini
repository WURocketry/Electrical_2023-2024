; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; WURocketry Documentation Notes:
;
; This is the most important file of a pio project. It defines the build options
; that are used for compiling your project. Things like library dependencies so that
; you #imports work. Read up on the pio docs for more info.
;

; Global environment build options/flags (applies additionally to platforms below)
[env]
lib_ldf_mode = deep+						; check library imports recursively, checking macros
build_flags = 								; build flags are passed to compiler, the 'I' prefix is for "include" paths
	-Iinclude/capabilities/
	-Iinclude/components/
	-Iinclude/simulation/

; Uno target
[env:uno]
platform = atmelavr
board = uno
framework = arduino
monitor_speed = 38400
lib_deps = 									; example of library dependencies, installed from the pio pkg manager
	sparkfun/SparkFun Qwiic OpenLog@^3.0.2
	adafruit/Adafruit BNO08x@^1.2.3
	adafruit/Adafruit BMP3XX Library@^2.1.2
	adafruit/Adafruit ADXL345@^1.3.4
	arduino-libraries/Servo@^1.2.1
build_flags = ${env.build_flags}
	-D UNO_PLATFORM

; THE PRIMARY PRODUCTION PLATFORM (that we use for running airbrakes firmware on, is the m7 core)
[env:portenta_h7_m7]
platform = ststm32
board = portenta_h7_m7
framework = arduino
monitor_speed = 115200
upload_protocol = dfu
lib_deps = 
	Portenta_SDRAM @ 1.0
	adafruit/Adafruit BNO08x@^1.2.3
	adafruit/Adafruit BMP3XX Library@^2.1.2
	sparkfun/SparkFun Qwiic OpenLog@^3.0.2
	adafruit/Adafruit ADXL345@^1.3.4
	arduino-libraries/Servo@^1.2.1
build_flags = ${env.build_flags}
	-D PORTENTA_H7_M7_PLATFORM

; The secondary m4 core (used to test if our airbrakes code also works on the secondary core, if we ever multicore it)
[env:portenta_h7_m4]
platform = ststm32
board = portenta_h7_m4
framework = arduino
monitor_speed = 115200
upload_protocol = dfu
lib_deps = 
	Portenta_SDRAM @ 1.0
	sparkfun/SparkFun Qwiic OpenLog@^3.0.2
	adafruit/Adafruit ADXL345@^1.3.4
	adafruit/Adafruit BMP3XX Library@^2.1.2
	adafruit/Adafruit BNO08x@^1.2.3
	arduino-libraries/Servo@^1.2.1
build_flags = ${env.build_flags}
	-D PORTENTA_H7_M4_PLATFORM

; The rp2040 target (used for debug and eventally ACE v3.0, our own chip PNP ACE...maybe)
[env:rp2040]
platform = raspberrypi
board = pico
framework = arduino
lib_deps = 
	adafruit/Adafruit BNO08x@^1.2.3
	adafruit/Adafruit BMP3XX Library@^2.1.2
	sparkfun/SparkFun Qwiic OpenLog@^3.0.2
	adafruit/Adafruit ADXL345@^1.3.4
	arduino-libraries/Servo@^1.2.1
build_flags = ${env.build_flags}
	-D RP2040_PLATFORM

; Cheap board for quick dev tests, does not need to be a successful build but useful for testing lower-end hardware capabilities
[env:kb2040]
platform = raspberrypi
board = nanorp2040connect
framework = arduino
lib_deps = 
	adafruit/Adafruit BNO08x@^1.2.3
	adafruit/Adafruit BMP3XX Library@^2.1.2
	sparkfun/SparkFun Qwiic OpenLog@^3.0.2
	adafruit/Adafruit ADXL345@^1.3.4
	arduino-libraries/Servo@^1.2.1
build_flags = ${env.build_flags}
	-D RP2040_PLATFORM
